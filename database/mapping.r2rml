# World-class definitions
@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix person: <http://dbpedia.org/ontology/Person#>.
@prefix geo: <http://www.opengis.net/ont/geosparql#>.

# Group aggreed definitions (Still need to put the webprotoge URL...)
@prefix ex: <http://exercice.ontology#>.
@prefix tr: <http://openis.ititou.be/ont#>.

<#ExerciseTripleMap>
    rdf:type rr:TriplesMap;

    rr:logicalTable [rr:sqlQuery """
    SELECT record.id AS ID,
           (end_time - start_time) AS duration,
           track_id,
           name AS has_type
    FROM record
    LEFT JOIN activity_type ON activity_type_id = activity_type.id;
    """];

    # Could also put Exercise-track and Exercise-spot endpoints
    rr:subjectMap [
        rr:template "http://localhost/exercise/{ID}/";
        rr:class ex:Exercise;
    ];

    rr:predicateObjectMap [
        rr:predicate ex:Duration;
        rr:objectMap [rr:column "duration"];
    ];

    rr:predicateObjectMap [
        rr:predicate ex:Equipment;
        rr:objectMap [rr:column "track_id"];
    ];

    rr:predicateObjectMap [
        rr:predicate ex:HasType;
        rr:objectMap [rr:column "has_type"];
    ];
.


<#PersonTripleMap>
    rdf:type rr:TriplesMap;

    rr:logicalTable [rr:sqlQuery """
    SELECT id AS ID, weight, height, CASE WHEN male then 'male' ELSE 'female' END AS sex FROM public.user;
    """];

    rr:subjectMap [
        rr:template "http://localhost/person/{ID}";
        rr:class ex:Person;
    ];

    rr:predicateObjectMap [
        rr:predicate person:weight;
        rr:objectMap [rr:column "weight"];
    ];

    rr:predicateObjectMap [
        rr:predicate person:height;
        rr:objectMap [rr:column "height"];
    ];

    rr:predicateObjectMap [
        rr:predicate person:sex;
        rr:objectMap [rr:column "sex"];
    ];
.


<#UserTripleMap>
    rdf:type rr:TriplesMap;
    rr:logicalTable [rr:sqlQuery """
    SELECT id AS ID FROM public.user
    """];

    rr:subjectMap [
        rr:template "http://localhost/user/{ID}";
        rr:class ex:UserAccount;
    ];
.



